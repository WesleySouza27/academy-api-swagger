// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aluno {
  id            String    @id @default(uuid()) @db.Uuid
  nome          String    @db.VarChar(100)
  email         String    @unique @db.VarChar(100)
  idade         Int?      @db.SmallInt
  senha         String    @db.Text
  authToken     String?   @map("auth_token") @db.Uuid
  criadoEm      DateTime  @default(now()) @map("criado_em")
  atualizado_em DateTime  @default(now()) @updatedAt @map("atualizado_em")
  endereco      Endereco?

  @@map("alunos")
}

// 1 - 1 = Um endereço pertence unica e exclusivamente a um aluno e um aluno pode ter apenas 1 endereço vinculado a ele
model Endereco {
  id          String  @id @default(uuid()) @db.Uuid
  logradouro  String  @db.VarChar(100)
  numero      String  @db.VarChar(50)
  complemento String? @db.VarChar(50)
  cep         String  @db.VarChar(8)
  bairro      String  @db.VarChar(100)
  cidade      String  @db.VarChar(100)
  uf          String  @db.VarChar(2)
  pais        String  @db.VarChar(100)
  alunoId     String  @unique @map("aluno_id") @db.Uuid
  aluno       Aluno   @relation(fields: [alunoId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("enderecos")
}

model Turma {
  id            String   @id @default(uuid()) @db.Uuid
  programa      String   @db.VarChar(100)
  edicao        Int      @db.SmallInt
  maxAlunos     Int      @map("max_alunos") @db.SmallInt
  criadoEm      DateTime @default(now()) @map("criado_em")
  atualizado_em DateTime @default(now()) @updatedAt @map("atualizado_em")

  @@unique([programa, edicao])
  @@map("turmas")
}
